managed implementation in class zcl_bp_i_rd_trav_bs unique;
// strict ( 2 );       // IT WILL CHECK ALL THE AUTHORIZATION

define behavior for ZI_rd_trav_bs alias Travel //alias <alias_name>
persistent table zrd_trav_bs
lock master
//authorization master ( instance )
etag master LocalLastChangedAt
{
  create;
  update;
  delete;
  association _Booking { create; }

  field ( numbering : managed, readonly ) TravelUuid;
  field ( readonly ) STATUS;
  field ( mandatory ) AgencyId ,CustomerId ;

  action acceptTravel;
  action rejectTravel;

  determination setinitialstatus on modify { create; }

  mapping for zrd_trav_bs // mapping travel interface view witth db table fields names
    {
      TravelUuid         = travel_uuid;
      TravelId           = travel_id;
      AgencyId           = agency_id;
      CustomerId         = customer_id;
      BeginDate          = begin_date;
      EndDate            = end_date;
      BookingFee         = booking_fee;
      TotalPrice         = total_price;
      CurrencyCode       = currency_code;
      Description        = description;
      Status             = status;
      Createdby          = createdby;
      Createdat          = createdat;
      Lastchangedby      = lastchangedby;
      Lastchangedat      = lastchangedat;
      LocalLastChangedAt = local_last_changed_at;
    }
}

define behavior for ZI_RD_BOOK_BS alias Booking     //alias <alias_name>
persistent table zrd_book_bs
lock dependent by _Travel
// authorization dependent by _Travel
etag master LocalLastChangedAt
{

  field ( numbering : managed, readonly ) BookingUuid;
  update;
  delete;
  field ( readonly ) TravelUuid;
  association _Travel;

  mapping for zrd_book_bs
    {
      BookingUuid        = booking_uuid;
      TravelUuid         = travel_uuid;
      TravelId           = travel_id;
      BookingId          = booking_id;
      BookingDate        = booking_date;
      CustomerId         = customer_id;
      CarrierId          = carrier_id;
      ConnectionId       = connection_id;
      FlightDate         = flight_date;
      FlightPrice        = flight_price;
      CurrencyCode       = currency_code;
      Createdby          = createdby;
      Createdat          = createdat;
      Lastchangedby      = lastchangedby;
      Lastchangedat      = lastchangedat;
      LocalLastChangedAt = local_last_changed_at;
    }


}